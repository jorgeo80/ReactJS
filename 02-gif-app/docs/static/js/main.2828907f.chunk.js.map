{"version":3,"sources":["components/CategoryAdd.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","Hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["CategoryAdd","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","toUpperCase","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","image","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"iMAEaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAmBhD,OACE,sBAAMC,SAZa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAe,SAAAS,GAAU,OAAMP,GAAN,mBAAqBO,OAC9CN,EAAc,MAOhB,SACE,uBACEO,KAAK,OACLC,MAAQT,EACRU,SApBoB,SAACP,GACzBF,EAAeE,EAAEQ,OAAOF,a,+BCJfG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEfC,EAFe,iDAEkCC,UAAUH,GAF5C,+DAGFI,MAAOF,GAHL,cAGfG,EAHe,gBAIEA,EAAKC,OAJP,uBAIbC,EAJa,EAIbA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC5B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVjB,kBAcdM,GAdc,4CAAH,sDCDPO,EAAc,SAAC,GAAyB,EAAtBJ,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAIxC,OACE,sBAAKc,UAAU,OAAf,UACE,6BAAMJ,EAAMK,gBACZ,qBAAKC,IAAMhB,EAAMiB,IAAKP,QCLfQ,EAAU,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAEhBd,mBAAS,CACjCqB,KAAM,GACNc,SAAS,IAJ+B,mBAEnCC,EAFmC,KAE5BC,EAF4B,KAoB1C,OAbAC,qBAAW,WACTzB,EAASC,GACJyB,MAAM,SAAAC,GAELC,YAAW,WACTJ,EAAS,CACPhB,KAAMmB,EACNL,SAAS,MAEX,UAEP,CAAErB,IAEEsB,EDjB0BM,CAAc5B,GAAlCa,EAF0B,EAE/BN,KAAac,EAFkB,EAElBA,QAErB,OACE,qCACE,6BAAMrB,IACJqB,GAAW,mBAAGL,UAAU,mCAAb,wBACb,qBAAKA,UAAU,YAAf,SACIH,EAAOJ,KAAK,SAAAoB,GAAK,OAAI,cAAC,EAAD,eAEQA,GADCA,EAAMlB,aEVjCmB,EAAe,WAAM,MAII5C,mBAAS,CAAC,cAJd,mBAIzBQ,EAJyB,KAIbT,EAJa,KAehC,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEES,EAAWe,KAAK,SAAAT,GAAQ,OACtB,cAAC,EAAD,CAEEA,SAAWA,GADLA,Y,MCxBlB+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2828907f.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nexport const CategoryAdd = ({ setCategories }) => {\r\n  \r\n  const [inputValue, setinputValue] = useState('')\r\n\r\n  const handleInputChange = (e)=>{\r\n    setinputValue( e.target.value )\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault() //Previente la regarca despues del enter\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories( categories => [ inputValue, ...categories ] )\r\n      setinputValue('')\r\n    }\r\n    \r\n    // console.log('Submit hecho')\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={ handleSubmit }>\r\n      <input \r\n        type=\"text\"\r\n        value={ inputValue }\r\n        onChange={ handleInputChange }\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\nCategoryAdd.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\n\r\nexport const getGifs = async( category ) => {\r\n\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=zej48poZ7TR4tAn9IQAO87uIAvL05gyh`\r\n  const resp = await fetch( url )\r\n  const { data } = await resp.json()\r\n\r\n  const gifs = data.map( img => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url\r\n    }\r\n  })\r\n\r\n  return gifs\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { id, title, url } ) => {\r\n  \r\n  // console.log( props ) --> En lugar del props usamos desestructuracion\r\n  // console.log( { id, title, url } )\r\n  return (\r\n    <div className=\"card\">\r\n      <h5>{ title.toUpperCase() }</h5>\r\n      <img src={ url } alt={title} />\r\n    </div>\r\n  )\r\n\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../Hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n  const { data:images, loading } = useFetchGifs( category )\r\n\r\n  return (\r\n    <>\r\n      <h3>{ category }</h3>\r\n      { loading && <p className=\"animate__animated animate__flash\">Loading...</p> } \r\n      <div className=\"card-grid\">\r\n        { images.map( image => <GifGridItem \r\n                                  key={ image.id }\r\n                                  { ...image }\r\n                                /> \r\n                    ) \r\n        }       \r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n  const [state, setstate] = useState({\r\n    data: [],\r\n    loading: true\r\n  })\r\n\r\n  useEffect( () => {\r\n    getGifs( category )\r\n        .then( imgs => {\r\n\r\n          setTimeout(() =>{\r\n            setstate({\r\n              data: imgs,\r\n              loading: false\r\n            })\r\n          },1000)\r\n        })\r\n  }, [ category ]) \r\n\r\n  return state\r\n\r\n}","import React, { useState } from 'react'\r\nimport { CategoryAdd } from './CategoryAdd'\r\nimport { GifGrid } from './GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n  // const categories = ['One Punch', 'Samurai X', 'Dragon Ball']\r\n  // usamos el useState para modificar el arreglo\r\n  const [categories, setCategories] = useState(['One Punch'])\r\n\r\n  // const handleAdd = () => {\r\n    \r\n  //   // Usamos el operador spread y despues agregamos el siguiente valor\r\n  //   // setCategories( [...categories, 'HunterXHunter'] )\r\n  //   // Otra opciÃ³n es usar un callback y traer el edo anterior\r\n  //   setCategories( cats => [...cats, 'HunterXHunter'] )\r\n\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2> \r\n      <CategoryAdd setCategories={ setCategories } />\r\n      <hr />\r\n\r\n      <ol>\r\n      { \r\n        categories.map( category => (\r\n          <GifGrid \r\n            key={ category }\r\n            category={ category } \r\n          />\r\n        ))\r\n      }\r\n      </ol>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './components/GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}